# .github/workflows/build-format-test.yml
# ----------------------------------------------------
# Build, Format and Test
# This workflow mirrors the Jenkins pipeline:
#   1. Checkout the repo
#   2. Format Go code (go fmt)
#   3. Build the Go binary
#   4. Run Go tests
#
# It re‑uses the composite actions defined in the repository
# (go-fmt, go-build, go-test) so that the individual steps
# are not duplicated here.
# ----------------------------------------------------
name: Build, Format and Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Set up Go (needed by the composite actions)
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          # Use the Go version specified in go.mod
          go-version-file: go.mod
          cache-dependency-path: go.sum

      # 3️⃣ Format Go code – uploads `formatted-files.txt`
      - name: Format Go code
        uses: ./.github/actions/go-fmt

      # 4️⃣ Build the Go binary – uploads `build/app`
      - name: Build Go project
        uses: ./.github/actions/go-build

      # 5️⃣ Run Go tests – prints output to the log
      - name: Test Go project
        uses: ./.github/actions/go-test