# .github/workflows/build-test-go-app.yml
# This workflow builds and tests a Go application using the reusable
# composite actions defined in the repository.
# It follows the same logical stages as the original Jenkinsfile:
# 1. Checkout & format
# 2. Build (via the Go Build composite action)
# 3. Test (via the Go Test composite action)
name: Build and Test Go App

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  # 1️⃣ Format Go code and capture any changes
  format:
    name: Format Go code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Run go fmt and capture diff
        shell: bash
        run: |
          go fmt ./...
          git diff --name-only > formatted-files.txt || true

      - name: Upload formatted files artifact
        uses: actions/upload-artifact@v4
        with:
          name: formatted-files
          path: formatted-files.txt

  # 2️⃣ Build the Go binary using the reusable Go Build action
  build:
    name: Build Go binary
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # The composite action handles building and uploading the binary
      - name: Build and upload binary
        uses: ./.github/actions/go-build

  # 3️⃣ Run Go tests using the reusable Go Test action
  test:
    name: Run Go tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      # The composite action runs the tests and uploads the results
      - name: Execute tests
        uses: ./.github/actions/go-test