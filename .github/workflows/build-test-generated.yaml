# .github/workflows/build-format-test.yml
# ------------------------------------------------------------
#  GitHub Actions workflow that mirrors the Jenkins pipeline.
#  It runs the reusable composite actions defined in the repo:
#    • Go Fmt   – formats the code and uploads a list of changed files
#    • Go Build – builds the binary and uploads it
#    • Go Test  – runs the test suite
#
#  Each job checks out the source, then calls the appropriate
#  composite action.  The jobs are chained with `needs:` so that
#  they execute in the same order as the original Jenkins stages.
#
#  The workflow triggers on pushes and pull‑request events.
# ------------------------------------------------------------
name: Build, Format and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ---------------------------------------------
  #  1️⃣  Format the Go source code
  # ---------------------------------------------
  format:
    name: Format Go code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Call the reusable Go Fmt composite action
      - name: Run go fmt
        uses: ./.github/actions/go-fmt

  # ---------------------------------------------
  #  2️⃣  Build the Go binary
  # ---------------------------------------------
  build:
    name: Build Go binary
    runs-on: ubuntu-latest
    needs: format
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Call the reusable Go Build composite action
      - name: Build the application
        uses: ./.github/actions/go-build

  # ---------------------------------------------
  #  3️⃣  Run Go tests
  # ---------------------------------------------
  test:
    name: Run Go tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Call the reusable Go Test composite action
      - name: Execute tests
        uses: ./.github/actions/go-test